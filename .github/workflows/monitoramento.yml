name: Monitoramento de Produtos iFood

on:
  schedule:
    - cron: '0 14-23,0-2 * * *'  # Executa de hora em hora entre 14h e 2h
  workflow_dispatch:

jobs:
  monitor:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: ‚¨áÔ∏è Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name: üêç Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: üì¶ Instalar depend√™ncias
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip check  # Verifica conflitos

      - name: ‚úÖ Executar monitoramento
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GOOGLE_CREDENTIALS_JSON: ${{ secrets.GOOGLE_CREDENTIALS_JSON }}
        run: |
          echo "‚è± In√≠cio da execu√ß√£o em $(date)"
          python monitoramento_produtos_actions.py
          echo "üèÅ Execu√ß√£o finalizada em $(date)"

      - name: ‚ùå Se falhar, notificar no Telegram
        if: failure()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d text="üö® *Erro na execu√ß√£o do monitoramento do iFood!* Verifique o GitHub Actions para mais detalhes." \
          -d parse_mode=Markdown
